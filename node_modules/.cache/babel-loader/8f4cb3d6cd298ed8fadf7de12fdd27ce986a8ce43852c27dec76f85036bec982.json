{"ast":null,"code":"import { AxiosInstance } from '../api/AxiosInstance';\nexport const getAllProducts = async () => {\n  try {\n    const res = await AxiosInstance.get('');\n    return res.data;\n  } catch (error) {}\n};\nexport const getVisibleProducts = (products, searchValue) => {\n  if (searchValue.length) {\n    const showedProducts = products.filter(product => product.name.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase()));\n    return showedProducts;\n  }\n  return products;\n};","map":{"version":3,"names":["AxiosInstance","getAllProducts","res","get","data","error","getVisibleProducts","products","searchValue","length","showedProducts","filter","product","name","toLocaleLowerCase","includes"],"sources":["/Users/dmytroyanko/Projects/levios/src/servises/getProducts.ts"],"sourcesContent":["import { AxiosInstance } from '../api/AxiosInstance';\nimport { IProduct } from '../models/IProducts';\n\nexport const getAllProducts = async () => {\n  try {\n    const res = await AxiosInstance.get('');\n\n    return res.data;\n  } catch (error) {}\n};\n\nexport const getVisibleProducts = (\n  products: IProduct[],\n  searchValue: string\n) => {\n  if (searchValue.length) {\n    const showedProducts = products.filter(product =>\n      product.name.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())\n    );\n\n    return showedProducts;\n  }\n\n  return products;\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AAGpD,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,EAAE,CAAC;IAEvC,OAAOD,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;AACnB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAChCC,QAAoB,EACpBC,WAAmB,KAChB;EACH,IAAIA,WAAW,CAACC,MAAM,EAAE;IACtB,MAAMC,cAAc,GAAGH,QAAQ,CAACI,MAAM,CAACC,OAAO,IAC5CA,OAAO,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACP,WAAW,CAACM,iBAAiB,CAAC,CAAC,CAC3E,CAAC;IAED,OAAOJ,cAAc;EACvB;EAEA,OAAOH,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { AxiosInstance } from '../api/AxiosInstance';\nexport const getProducts = async () => {\n  try {\n    const res = await AxiosInstance.get('');\n    return res.data['products'];\n  } catch (error) {\n    console.log('Error: ', error.message);\n  }\n};\nexport const getVisibleProducts = (products, searchParams) => {\n  const searchQuery = searchParams.get('search');\n  const categoryQuery = searchParams.get('category');\n  if (searchQuery && categoryQuery) {\n    return products.filter(product => product.name.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase())).filter(product => product.bsr_category.includes(categoryQuery));\n  }\n  if (searchQuery && !categoryQuery) {\n    const searchOfName = products.filter(product => product.name.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase()));\n    return searchOfName;\n  }\n  if (!searchQuery && categoryQuery) {\n    return products.filter(product => product.bsr_category.includes(categoryQuery));\n  }\n  return products;\n};","map":{"version":3,"names":["AxiosInstance","getProducts","res","get","data","error","console","log","message","getVisibleProducts","products","searchParams","searchQuery","categoryQuery","filter","product","name","toLocaleLowerCase","includes","bsr_category","searchOfName"],"sources":["/Users/dmytroyanko/Projects/levios/src/servises/getProducts.ts"],"sourcesContent":["import { AxiosInstance } from '../api/AxiosInstance';\nimport { IProduct } from '../models/IProducts';\n\nexport const getProducts = async () => {\n  try {\n    const res = await AxiosInstance.get('');\n\n    return res.data['products'];\n  } catch (error) {\n    console.log('Error: ', (error as Error).message);\n  }\n};\n\nexport const getVisibleProducts = (\n  products: IProduct[],\n  searchParams: URLSearchParams\n) => {\n  const searchQuery = searchParams.get('search');\n  const categoryQuery = searchParams.get('category');\n\n  if (searchQuery && categoryQuery) {\n    return products\n      .filter(product =>\n        product.name\n          .toLocaleLowerCase()\n          .includes(searchQuery.toLocaleLowerCase())\n      )\n      .filter(product => product.bsr_category.includes(categoryQuery));\n  }\n\n  if (searchQuery && !categoryQuery) {\n    const searchOfName = products.filter(product =>\n      product.name.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase())\n    );\n\n    return searchOfName;\n  }\n\n  if (!searchQuery && categoryQuery) {\n    return products.filter(product =>\n      product.bsr_category.includes(categoryQuery)\n    );\n  }\n\n  return products;\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AAGpD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,EAAE,CAAC;IAEvC,OAAOD,GAAG,CAACE,IAAI,CAAC,UAAU,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAGF,KAAK,CAAWG,OAAO,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAChCC,QAAoB,EACpBC,YAA6B,KAC1B;EACH,MAAMC,WAAW,GAAGD,YAAY,CAACR,GAAG,CAAC,QAAQ,CAAC;EAC9C,MAAMU,aAAa,GAAGF,YAAY,CAACR,GAAG,CAAC,UAAU,CAAC;EAElD,IAAIS,WAAW,IAAIC,aAAa,EAAE;IAChC,OAAOH,QAAQ,CACZI,MAAM,CAACC,OAAO,IACbA,OAAO,CAACC,IAAI,CACTC,iBAAiB,CAAC,CAAC,CACnBC,QAAQ,CAACN,WAAW,CAACK,iBAAiB,CAAC,CAAC,CAC7C,CAAC,CACAH,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACI,YAAY,CAACD,QAAQ,CAACL,aAAa,CAAC,CAAC;EACpE;EAEA,IAAID,WAAW,IAAI,CAACC,aAAa,EAAE;IACjC,MAAMO,YAAY,GAAGV,QAAQ,CAACI,MAAM,CAACC,OAAO,IAC1CA,OAAO,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACN,WAAW,CAACK,iBAAiB,CAAC,CAAC,CAC3E,CAAC;IAED,OAAOG,YAAY;EACrB;EAEA,IAAI,CAACR,WAAW,IAAIC,aAAa,EAAE;IACjC,OAAOH,QAAQ,CAACI,MAAM,CAACC,OAAO,IAC5BA,OAAO,CAACI,YAAY,CAACD,QAAQ,CAACL,aAAa,CAC7C,CAAC;EACH;EAEA,OAAOH,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
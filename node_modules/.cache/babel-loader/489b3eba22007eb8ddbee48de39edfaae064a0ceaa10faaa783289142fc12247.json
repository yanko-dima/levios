{"ast":null,"code":"var _jsxFileName = \"/Users/dmytroyanko/Projects/levios/src/cmponents/SearchForm/SearchForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { validationSchema } from '../../servises/formValidation';\nimport { SearchInput } from './SearchInput';\nimport { SearchSelect } from './SearchSelect';\nimport css from './SearchForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchForm = ({\n  onSetSubmitSearch,\n  categories\n}) => {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  const categoryQuery = searchParams.get('category');\n  const initialValues = {\n    search: searchQuery ? searchQuery : '',\n    category: categoryQuery ? categoryQuery : ''\n  };\n  const handleSubmit = values => {\n    const {\n      search,\n      category\n    } = values;\n    onSetSubmitSearch(search.trim(), category);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: css.form,\n        children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n          name: \"search\",\n          type: \"search\",\n          placeholder: \"Enter search text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchSelect, {\n          name: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a product category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.button,\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: css.buttonClear,\n          onClick: () => setSearchParams({}),\n          children: \"Clear filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SearchForm, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useSearchParams","Formik","Form","validationSchema","SearchInput","SearchSelect","css","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchForm","onSetSubmitSearch","categories","_s","searchParams","setSearchParams","searchQuery","get","categoryQuery","initialValues","search","category","handleSubmit","values","trim","children","onSubmit","className","form","name","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","map","button","buttonClear","onClick","_c","$RefreshReg$"],"sources":["/Users/dmytroyanko/Projects/levios/src/cmponents/SearchForm/SearchForm.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { validationSchema } from '../../servises/formValidation';\nimport { SearchInput } from './SearchInput';\nimport { SearchSelect } from './SearchSelect';\nimport { ISearchForm, ISearchFormValues } from '../../models/ISearch';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm: React.FC<ISearchForm> = ({\n  onSetSubmitSearch,\n  categories,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('search');\n  const categoryQuery = searchParams.get('category');\n\n  const initialValues: ISearchFormValues = {\n    search: searchQuery ? searchQuery : '',\n    category: categoryQuery ? categoryQuery : '',\n  };\n\n  const handleSubmit = (values: ISearchFormValues) => {\n    const { search, category } = values;\n\n    onSetSubmitSearch(search.trim(), category);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <SearchInput\n            name=\"search\"\n            type=\"search\"\n            placeholder=\"Enter search text\"\n          />\n          <SearchSelect name=\"category\">\n            <option value=\"\">Select a product category</option>\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </SearchSelect>\n\n          <button className={css.button} type=\"submit\">\n            Search\n          </button>\n          <button\n            type=\"button\"\n            className={css.buttonClear}\n            onClick={() => setSearchParams({})}\n          >\n            Clear filter\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}